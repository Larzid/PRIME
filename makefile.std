include makefile.base

MOREOBJS=
LIBNOTEYE=lib/libnoteye.so
#LIBPIO=lib/libpio.so

GAMEOWNER=root:games
PREFIX=
BINDIR=$(PREFIX)/usr/games/bin
MANDIR=$(PREFIX)/usr/share/man/man6
DATADIR=$(PREFIX)/usr/games/share/$(PROGRAM)
USERDIR=~/.config/$(PROGRAM)
SCOREDIR=$(PREFIX)/var/games/$(PROGRAM)

CXX=c++

all: $(PROGRAM)

single: single-user $(PROGRAM) prepare prepare-gui
console: single-user nogui $(PROGRAM)_con prepare
multi: multi-user $(PROGRAM)
multiconsole: multi-user nogui $(PROGRAM)_con

nogui:
	echo "#define NOGUI" >> $(CONFIG)

single-user:
	echo "/* File generated by Make. */" > $(CONFIG)
	echo "#ifndef CONFIG_H" >> $(CONFIG)
	echo "#define CONFIG_H" >> $(CONFIG)
	echo "#define DATADIR \"data\"" >> $(CONFIG)
	echo "#define USERDIR \"user\"" >> $(CONFIG)
	echo "#define SCOREDIR \"score\"" >> $(CONFIG)
	echo "#endif" >> $(CONFIG)

multi-user:
	echo "/* File generated by Make. */" > $(CONFIG)
	echo "#ifndef CONFIG_H" >> $(CONFIG)
	echo "#define CONFIG_H" >> $(CONFIG)
	echo "#define DATADIR \"$(DATADIR)\"" >> $(CONFIG)
	echo "#define USERDIR \"$(USERDIR)\"" >> $(CONFIG)
	echo "#define SCOREDIR \"$(SCOREDIR)\"" >> $(CONFIG)
	echo "#endif" >> $(CONFIG)

install:
	mkdir -p $(BINDIR)
	cp $(PROGRAM) $(BINDIR)
	mkdir -p $(MANDIR)
	cp docs/prime/man_page $(MANDIR)/$(PROGRAM).6
	gzip $(MANDIR)/$(PROGRAM).6
	mkdir -p $(DATADIR)
	cp -r user/* $(DATADIR)
	chown $(GAMEOWNER) $(DATADIR)
	mkdir -p $(SCOREDIR)
	touch $(SCOREDIR)/logfile.txt
	touch $(SCOREDIR)/highscores.dat
	chown -R $(GAMEOWNER) $(SCOREDIR)
	chmod -R 775 $(SCOREDIR)

uninstall:
	rm $(BINDIR)/$(PROGRAM)
	rm $(MANDIR)/$(PROGRAM).6.gz
	rm $(SCOREDIR)/logfile.txt
	rm $(SCOREDIR)/highscores.dat
	rmdir --ignore-fail-on-non-empty $(SCOREDIR)
	rm $(DATADIR)/*
	rmdir --ignore-fail-on-non-empty $(DATADIR)

prepare:
	strip $(PROGRAM)
	mkdir -p build
	mkdir -p build/$(PROGRAM)
	mkdir -p build/$(PROGRAM)/user
	cp $(PROGRAM) build/$(PROGRAM)/
	cp -r user/* build/$(PROGRAM)/user

prepare-gui:
	mkdir -p build/$(PROGRAM)/shot
	cp -r lua gfx build/$(PROGRAM)

include makefile.core
$(LIBNOTEYE):
	cd src/noteye && $(MAKE)
$(LIBPIO): src/pio/pio.pas
	cd src/pio && $(MAKE) libpio.so
